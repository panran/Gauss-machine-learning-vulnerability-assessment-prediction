import xlrd
import numpy as np
from sklearn.gaussian_process.kernels import ConstantKernel, RBF
from sklearn.gaussian_process import GaussianProcessClassifier
from sklearn.gaussian_process.kernels import DotProduct, ConstantKernel as C
from sklearn.gaussian_process.kernels import (RBF, Matern, RationalQuadratic,
                                              ExpSineSquared, DotProduct,
                                              ConstantKernel)

def readData(file):
    data=[]
    workbook=xlrd.open_workbook(file)
    sheet=workbook.sheet_by_index(0)
    print(sheet.nrows)
    for i in range(sheet.nrows):
        data.append(sheet.row_values(i))
    #读取数据
    return data

if __name__ == '__main__':


    trainData = readData('dataSet/data_w_train.xlsx')
    testData = readData('dataSet/data_w_test.xlsx')
    #获取训练样本
    X_train_data=[]
    Y_train_data=[]
    X_test_data=[]
    Y_test_data=[]
    X_test=[[0.6234334590388353, 0.44364739554051225, 0.3275837134113257, -0.7179896301760847, -0.5694265216183942, 0.4127191290504716, -1.060907728510604, 1.3948017306036764, -0.981652482968713]
        , [0.05349461661390553, -0.24020687714348177, -0.788627458212451, 0.14359792603521682, 1.0755834262965298,
           -0.5295584957084528, 0.9516304565972229, -0.8959767425905334, 0.5285646183409279]
        , [-0.3164893067545446, -0.3905931749330176, 0.2834247381561676, 1.2090865458568272, -0.345524556221553,
           -0.2951787629427783, 0.9141650132959159, -0.1561331656459965, 0.5771175093087533]]
    #处理文件漏洞训练样本
    for i in range(len(trainData)):
        X_train_data.append(trainData[i][:9])
        print(X_train_data[i])
        if trainData[i][9] == 1.0:
            Y_train_data.append(1)
        if trainData[i][9] == 0.0:
            Y_train_data.append(-1)
   # print((trainData[0][9]))

    #处理漏洞文件的测试样本
    for i in range(len(testData)):
        X_test_data.append(testData[i][:9])
        print(X_test_data[i])
        if testData[i][9] == 1.0:
            Y_test_data.append(1)
        if testData[i][9] == 0.0:
            Y_test_data.append(-1)

    print(Y_train_data)
    kernels = [1.0 * RBF(length_scale=1.0, length_scale_bounds=(1e-1, 10.0)),
               1.0 * RationalQuadratic(length_scale=1.0, alpha=0.1),
               1.0 * ExpSineSquared(length_scale=1.0, periodicity=3.0, length_scale_bounds=(0.1, 10.0),periodicity_bounds=(1.0, 10.0)),
               ConstantKernel(0.1, (0.01, 10.0))* (DotProduct(sigma_0=1.0, sigma_0_bounds=(0.1, 10.0)) ** 2),
               1.0 * Matern(length_scale=1.0, length_scale_bounds=(1e-1, 10.0), nu=1.5)]
    # 高斯机器学习的内核
    gp = GaussianProcessClassifier(kernel=kernels[2])
    gp.fit(X_train_data, Y_train_data)

    X_test=X_test_data
    print('预测结果：')
    print(gp.predict_proba(X_test))
    print('所属标签：',gp.predict(X_test))
    print()

    print('真实结果：',Y_test_data)